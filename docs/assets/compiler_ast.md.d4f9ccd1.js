import { o as n, c as s, a } from './app.547ab472.js'
const t =
    '{"title":"程序运行过程","description":"","frontmatter":{},"headers":[{"level":2,"title":"程序运行过程","slug":"程序运行过程"},{"level":2,"title":"AST","slug":"ast"},{"level":3,"title":"介绍","slug":"介绍"},{"level":2,"title":"例子","slug":"例子"},{"level":3,"title":"AST在vue-next中的应用","slug":"ast在vue-next中的应用"}],"relativePath":"compiler/ast.md","lastUpdated":1625454689450}',
  p = {},
  o = a(
    '<h2 id="程序运行过程"><a class="header-anchor" href="#程序运行过程" aria-hidden="true">#</a> 程序运行过程</h2><p>我们知道计算机是不认识这些字符的，只认0和1，而为了让计算机认识这玩意，就需要进行翻译成机器码才行。先了解下程序的运行步骤：</p><ol><li>解析你所编写的code</li><li>生成AST</li><li>对语法进行校验</li><li>然后通过AST进行转换、优化</li><li>生成机器码</li><li>丢给计算机运行</li></ol><h2 id="ast"><a class="header-anchor" href="#ast" aria-hidden="true">#</a> AST</h2><ul><li><a href="https://astexplorer.net/" target="_blank" rel="noopener noreferrer">AST Explorer</a></li><li><a href="https://vue-next-template-explorer.netlify.app/#%7B%22src%22%3A%22%3Cdiv%3EHello%20World!%3C%2Fdiv%3E%22%2C%22options%22%3A%7B%22mode%22%3A%22module%22%2C%22filename%22%3A%22Foo.vue%22%2C%22prefixIdentifiers%22%3Afalse%2C%22hoistStatic%22%3Afalse%2C%22cacheHandlers%22%3Afalse%2C%22scopeId%22%3Anull%2C%22inline%22%3Afalse%2C%22ssrCssVars%22%3A%22%7B%20color%20%7D%22%2C%22compatConfig%22%3A%7B%22MODE%22%3A3%7D%2C%22whitespace%22%3A%22condense%22%2C%22bindingMetadata%22%3A%7B%22TestComponent%22%3A%22setup-const%22%2C%22setupRef%22%3A%22setup-ref%22%2C%22setupConst%22%3A%22setup-const%22%2C%22setupLet%22%3A%22setup-let%22%2C%22setupMaybeRef%22%3A%22setup-maybe-ref%22%2C%22setupProp%22%3A%22props%22%2C%22vMySetupDir%22%3A%22setup-const%22%7D%7D%7D" target="_blank" rel="noopener noreferrer">vue-next-template-explorer</a></li></ul><p><code>AST Expolder</code>提供了基本大部分语言的AST结构</p><p><code>vue-next-template-explorer</code>提供了vue-next的模板编译所生成的<code>render function</code></p><h3 id="介绍"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h3><p>AST全称抽象语法树（Abstract Syntax Tree），AST定义了一些规范用于对语法进行表述。</p><p>每个AST节点都会有这么几个部分：</p><ul><li>type 类型</li><li>start 开始位置</li><li>end 结束位置</li><li>body 程序体</li><li>kind 关键字</li><li>VariableDeclarator 变量表述语句</li><li>CallExpression 函数调用语句</li><li>Identifier 标识符</li><li>Literal 字面量</li><li>ExpressionStatement 表达式</li><li>其他</li></ul><h2 id="例子"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><p>我们编写的代码</p><div class="language-js"><pre><code><span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">1</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>\n\n<span class="token keyword">function</span> <span class="token function">add</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> a <span class="token operator">+</span> b\n<span class="token punctuation">}</span>\n\n</code></pre></div><p>通过<code>acorn</code>解析的AST语法树结构，或者也可以用<code>@babel/parser</code></p><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Program&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;VariableDeclaration&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;declarations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;VariableDeclarator&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;num&quot;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;init&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Literal&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;raw&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;kind&quot;</span><span class="token operator">:</span> <span class="token string">&quot;const&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ExpressionStatement&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">31</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;expression&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;CallExpression&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">31</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;callee&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MemberExpression&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">26</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;console&quot;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;property&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">26</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;log&quot;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;computed&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;optional&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;arguments&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">27</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;num&quot;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;optional&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;FunctionDeclaration&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">33</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;add&quot;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;expression&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;generator&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;async&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;params&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">47</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">51</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;BlockStatement&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ReturnStatement&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">56</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">68</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;argument&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;BinaryExpression&quot;</span><span class="token punctuation">,</span>\n              <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">63</span><span class="token punctuation">,</span>\n              <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">68</span><span class="token punctuation">,</span>\n              <span class="token property">&quot;left&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">63</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">64</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token property">&quot;operator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;+&quot;</span><span class="token punctuation">,</span>\n              <span class="token property">&quot;right&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Identifier&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token number">67</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;end&quot;</span><span class="token operator">:</span> <span class="token number">68</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;sourceType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="ast在vue-next中的应用"><a class="header-anchor" href="#ast在vue-next中的应用" aria-hidden="true">#</a> AST在vue-next中的应用</h3><p><code>vue-next</code>提供了<code>@vue/compiler-core</code>和<code>@vue/compiler-dom</code>对模板进行编译，在生成<code>Vnode</code>的时候，并添加了<code>block</code>的算法，具体后面编译模板的时候再说。</p>',
    18
  )
p.render = function(a, t, p, e, u, c) {
  return n(), s('div', null, [o])
}
export default p
export { t as __pageData }
