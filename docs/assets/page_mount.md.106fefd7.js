import { o as n, c as s, a } from './app.c3e51dbf.js'
const t =
    '{"title":"mount挂载","description":"","frontmatter":{},"headers":[{"level":2,"title":"mount挂载","slug":"mount挂载"}],"relativePath":"page/mount.md","lastUpdated":1625458480284}',
  p = {},
  o = a(
    '<h2 id="mount挂载"><a class="header-anchor" href="#mount挂载" aria-hidden="true">#</a> mount挂载</h2><p>mount主要就做了判断是否已经渲染，如果没有渲染则创建Vnode，并把context挂载到<code>vnode.appContext</code>上，接下来判断是否SSR渲染，如果不是则调用<code>render</code>函数进行渲染（diff操作也是执行的这块），最后渲染结束，初始化<code>devtools</code>即可。</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AppContext</span> <span class="token punctuation">{</span>\n  app<span class="token operator">:</span> App <span class="token comment">// for devtools 应用于 vue devtools</span>\n  config<span class="token operator">:</span> AppConfig\n  mixins<span class="token operator">:</span> ComponentOptions<span class="token punctuation">[</span><span class="token punctuation">]</span>\n  components<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> Component<span class="token operator">&gt;</span>\n  directives<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> Directive<span class="token operator">&gt;</span>\n  provides<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>\n  <span class="token comment">/**\n   * Flag for de-optimizing props normalization\n   * @internal\n   */</span>\n  deopt<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * HMR only\n   * @internal\n   */</span>\n  reload<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">/**\n   * v2 compat only\n   * @internal\n   */</span>\n  filters<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createAppAPI</span><span class="token generic class-name"><span class="token operator">&lt;</span>HostElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  render<span class="token operator">:</span> RootRenderFunction<span class="token punctuation">,</span>\n  hydrate<span class="token operator">?</span><span class="token operator">:</span> RootHydrateFunction\n<span class="token punctuation">)</span><span class="token operator">:</span> CreateAppFunction<span class="token operator">&lt;</span>HostElement<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span>rootComponent<span class="token punctuation">,</span> rootProps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>rootProps <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>rootProps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      __DEV__ <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">root props passed to app.mount() must be an object.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n      rootProps <span class="token operator">=</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 创建AppContext</span>\n    <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token function">createAppContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token comment">// 已安装的插件</span>\n    <span class="token keyword">const</span> installedPlugins <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 是否渲染</span>\n    <span class="token keyword">let</span> isMounted <span class="token operator">=</span> <span class="token boolean">false</span>\n\n    <span class="token keyword">const</span> app<span class="token operator">:</span> App <span class="token operator">=</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>app <span class="token operator">=</span> <span class="token punctuation">{</span>\n      _uid<span class="token operator">:</span> uid<span class="token operator">++</span><span class="token punctuation">,</span>\n      _component<span class="token operator">:</span> rootComponent <span class="token keyword">as</span> ConcreteComponent<span class="token punctuation">,</span>\n      _props<span class="token operator">:</span> rootProps<span class="token punctuation">,</span>\n      _container<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n      _context<span class="token operator">:</span> context<span class="token punctuation">,</span>\n\n      version<span class="token punctuation">,</span>\n      <span class="token comment">// ...</span>\n      <span class="token function">mount</span><span class="token punctuation">(</span>\n        rootContainer<span class="token operator">:</span> HostElement<span class="token punctuation">,</span>\n        isHydrate<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>\n        isSVG<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n      <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 创建Vnode</span>\n          <span class="token keyword">const</span> vnode <span class="token operator">=</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>\n            rootComponent <span class="token keyword">as</span> ConcreteComponent<span class="token punctuation">,</span>\n            rootProps\n          <span class="token punctuation">)</span>\n          <span class="token comment">// store app context on the root VNode.</span>\n          <span class="token comment">// this will be set on the root instance on initial mount.</span>\n          <span class="token comment">// 将context挂载到根节点</span>\n          vnode<span class="token punctuation">.</span>appContext <span class="token operator">=</span> context\n\n          <span class="token comment">// HMR root reload</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            context<span class="token punctuation">.</span><span class="token function-variable function">reload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n              <span class="token function">render</span><span class="token punctuation">(</span><span class="token function">cloneVNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">,</span> rootContainer<span class="token punctuation">,</span> isSVG<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n          <span class="token comment">// ssr渲染</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>isHydrate <span class="token operator">&amp;&amp;</span> hydrate<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">hydrate</span><span class="token punctuation">(</span>vnode <span class="token keyword">as</span> VNode<span class="token operator">&lt;</span>Node<span class="token punctuation">,</span> Element<span class="token operator">&gt;</span><span class="token punctuation">,</span> rootContainer <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 普通渲染</span>\n            <span class="token function">render</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> rootContainer<span class="token punctuation">,</span> isSVG<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n\n          isMounted <span class="token operator">=</span> <span class="token boolean">true</span>\n          app<span class="token punctuation">.</span>_container <span class="token operator">=</span> rootContainer\n          <span class="token comment">// for devtools and telemetry</span>\n          <span class="token punctuation">;</span><span class="token punctuation">(</span>rootContainer <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__vue_app__ <span class="token operator">=</span> app\n          <span class="token comment">// 初始化devtools</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">||</span> __FEATURE_PROD_DEVTOOLS__<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">devtoolsInitApp</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> version<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n\n          <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>component<span class="token operator">!</span><span class="token punctuation">.</span>proxy\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">warn</span><span class="token punctuation">(</span>\n            <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">App has already been mounted.\\n</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span>\n              <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">If you want to remount the same app, move your app creation logic </span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span>\n              <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">into a factory function and create fresh app instances for each </span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span>\n              <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">mount - e.g. \\`const createMyApp = () =&gt; createApp(App)\\`</span><span class="token template-punctuation string">`</span></span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// ...</span>\n    <span class="token keyword">return</span> app\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>整体代码不算复杂，主要核心是<code>render函数</code>，这部分下面说。至于Vnode在准备工作的章节已经说过了，这里不在叙述。</p>',
    4
  )
p.render = function(a, t, p, e, c, l) {
  return n(), s('div', null, [o])
}
export default p
export { t as __pageData }
